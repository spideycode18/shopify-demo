{% if cart_item %}
    <div class="cart__item_delivery_address_form-{{ cart_item.id }}">
        <h2>Where should we send this box?</h2>
        <div class="delivery_address_fields">
            <input type="hidden" class="cart_item_id_value" value="{{ cart_item.id }}">
            <div class="grid grid--3-col">
                <div class="field grid__item">
                    <select class="field"
                            id="cart-item-{{ cart_item.id }}-title"
                            name="cart-item-{{ cart_item.id }}-title">
                        <option value="Mr">Mr.</option>
                        <option value="Ms">Ms.</option>
                        <option value="Mrs">Mrs.</option>
                    </select>
                </div>
                <div class="field grid__item">
                    <input class="field__input"
                           autocomplete="first_name"
                           type="text"
                           id="cart-item-{{ cart_item.id }}-first_name"
                           name="cart-item-{{ cart_item.id }}-first_name"
                           value=""
                           required="required"
                           placeholder="First Name">
                    <label class="field__label" for="cart-item-{{ cart_item.id }}-first_name">First Name</label>
                </div>
                <div class="field grid__item">
                    <input class="field__input"
                           autocomplete="surname"
                           type="text"
                           id="cart-item-{{ cart_item.id }}-surname"
                           name="cart-item-{{ cart_item.id }}-surname"
                           value=""
                           required="required"
                           placeholder="Surname">
                    <label class="field__label" for="cart-item-{{ cart_item.id }}-surname">Surname</label>
                </div>
            </div>

            <div class="grid grid--2-col">
                <div class="field grid__item">
                    <input class="field__input"
                           autocomplete="phone"
                           type="text"
                           id="cart-item-{{ cart_item.id }}-phone"
                           name="cart-item-{{ cart_item.id }}-phone"
                           value=""
                           required="required"
                           placeholder="Phone">
                    <label class="field__label" for="cart-item-{{ cart_item.id }}-phone">Phone</label>
                </div>
                <div class="field grid__item">
                    <input class="field__input"
                           autocomplete="email"
                           type="text"
                           id="cart-item-{{ cart_item.id }}-email"
                           name="cart-item-{{ cart_item.id }}-email"
                           value=""
                           required="required"
                           placeholder="Email">
                    <label class="field__label" for="cart-item-{{ cart_item.id }}-email">Email</label>
                </div>
            </div>

            <div class="grid grid--1-col">
                <div class="grid__item">
                    <input type="radio"
                           id="cart-item-{{ cart_item.id }}-address_type-Home"
                           name="cart-item-{{ cart_item.id }}-address_type"
                           value="Home"
                           checked="checked"
                           required="required">
                    <label for="cart-item-{{ cart_item.id }}-address_type-Home">Home</label>

                    <input type="radio"
                           id="cart-item-{{ cart_item.id }}-address_type-Business"
                           name="cart-item-{{ cart_item.id }}-address_type"
                           value="Business"
                           required="required">
                    <label for="cart-item-{{ cart_item.id }}-address_type-Business">Business</label>

                    <input type="radio"
                           id="cart-item-{{ cart_item.id }}-address_type-Hospital"
                           name="cart-item-{{ cart_item.id }}-address_type"
                           value="Hospital"
                           required="required">
                    <label for="cart-item-{{ cart_item.id }}-address_type-Hospital">Hospital</label>

                </div>
            </div>

        </div>
    </div>
{% endif -%}

<script type="text/javascript">

    function populate_sample_delivery_address_for_all_cart_items() {
        $('input[type="hidden"].cart_item_id_value').each(function (k, element) {
            var cart_item_id = element.value;
            $('#cart-item-' + cart_item_id + '-first_name').first().val('firstName_' + cart_item_id);
            $('#cart-item-' + cart_item_id + '-surname').first().val('surName_' + cart_item_id);
            $('#cart-item-' + cart_item_id + '-phone').first().val('phone_' + cart_item_id);
            $('#cart-item-' + cart_item_id + '-email').first().val(cart_item_id + '@snowgoose.com.au');
        });
    }

    function populate_cart_item_delivery_addresses() {
        console.log('Fetching delivery addresses from cart\' attributes...');
        fetch('/cart.js')
            .then(response => response.json())
            .then(data => {
                if (data?.attributes && data?.attributes != null) {
                    if (data?.attributes?.delivery_addresses) {
                        const delivery_addresses_json_str = data.attributes.delivery_addresses;
                        const delivery_addresses = JSON.parse(delivery_addresses_json_str.replace(/=>/g, ':'));
                        if (delivery_addresses != null && delivery_addresses?.length) {

                            delivery_addresses.forEach(delivery_address => {
                                const cart_item_id = delivery_address.cart_item_id;
                                document.getElementById('cart-item-' + cart_item_id + '-title').value = delivery_address.title;
                                document.getElementById('cart-item-' + cart_item_id + '-first_name').value = delivery_address.first_name;
                                document.getElementById('cart-item-' + cart_item_id + '-surname').value = delivery_address.surname;
                                document.getElementById('cart-item-' + cart_item_id + '-phone').value = delivery_address.phone;
                                document.getElementById('cart-item-' + cart_item_id + '-email').value = delivery_address.email;
                                document.getElementById('cart-item-' + cart_item_id + '-address_type-' + delivery_address.address_type).checked = true;
                            })
                        }
                    }
                }
            });
    }

    async function handle_cart_item_delivery_addresses() {
        console.log('Handling delivery address for each item !!!');
        let delivery_addresses = [];

        $('input[type="hidden"].cart_item_id_value').each(function (k, element) {

            const cart_item_id = element.value;
            const title_val = $('#cart-item-' + cart_item_id + '-title').first().val().trim();
            const first_name_val = $('#cart-item-' + cart_item_id + '-first_name').first().val().trim();
            const surname_val = $('#cart-item-' + cart_item_id + '-surname').first().val().trim();
            const phone_val = $('#cart-item-' + cart_item_id + '-phone').first().val().trim();
            const email_val = $('#cart-item-' + cart_item_id + '-email').first().val().trim();
            const address_type_val = $('input[name="cart-item-' + cart_item_id + '-address_type"]:checked').val();

            delivery_addresses.push({
                'cart_item_id': cart_item_id,
                'title': title_val,
                'first_name': first_name_val,
                'surname': surname_val,
                'phone': phone_val,
                'email': email_val,
                'address_type': address_type_val
            });

        });


        if (delivery_addresses.length) {

            console.log('Adding delivery addresses to cart\' attributes...');
            console.log(delivery_addresses);

            const updated_attributes = {
                'attributes': {
                    'delivery_addresses': delivery_addresses
                }
            };

            await fetch('/cart/update.js', {
                method: 'POST',
                credentials: 'same-origin',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(updated_attributes),
            }).then(response => {
                alert('Successfully add the delivery addresses to the cart\'s attributes !');
                const jsonResponse = response.json();
                console.log(jsonResponse);
                $('#checkout').click();
                return jsonResponse;
            }).catch((error) => {
                console.error('Error:', error);
            });

        }


    }

</script>
